   try
    {
      Map map = new Map (38,34,"wee");
      Obstacle forestBottom = new Obstacle (new Sprite ("ForestBottom.png"));
      Obstacle forestTop = new Obstacle (new Sprite ("ForestTop.png"));
      Obstacle forestRight = new Obstacle (new Sprite ("ForestRight.png")); 
      Obstacle forestLeft = new Obstacle (new Sprite ("ForestLeft.png"));
      Obstacle forestFloor = new Obstacle (new Sprite ("ForestFloor.png"));
      BackTile grass = new BackTile (new Sprite ("grass.png"));
      for (int x = 0; x < map.width();x++)
      {
        for (int y = 0; y < map.height();y++)
        {
          
          if (y == 5 && x > 8 && x < 29)
            map.setTile (forestBottom, x,y,1);
          else if(y == 28 && x > 8 && x < 29)
            map.setTile (forestTop, x,y,1);
          else if(x == 8 && y > 5 && y < 28)
            map.setTile (forestRight, x,y,1);
          else if(x == 29 && y > 5 && y < 28)
            map.setTile (forestLeft, x,y,1);  
          
          if (x < 8 || y <5 || y > 28 || x > 29)
            map.setTile (forestFloor, x, y,0); 
          else
            map.setTile (grass, x, y,0); 
        }
      }
      map.setTile (new Obstacle (new Sprite ("ForestTopLeftInner.png")), 8,5,1);
      map.setTile (new Obstacle (new Sprite ("ForestTopRightInner.png")), 29,5,1);
      map.setTile (new Obstacle (new Sprite ("ForestBottomLeftInner.png")), 8,28,1);
      map.setTile (new Obstacle (new Sprite ("ForestBottomRightInner.png")), 29,28,1);
      for (int x = 0; x < 4; x++)
      {
        map.removeTile (20 + x,5,1);
        map.setTile (grass,20,4 - x,0);
        map.setTile (forestRight,20,4 - x,1);
        map.setTile (grass,23,4 - x,0);
        map.setTile (forestLeft,23,4 - x,1);
        map.setTile (grass,26,29 + x,0);
        map.setTile (forestRight,26,29 + x,1);
        map.setTile (grass,29,29 + x,0);
        map.setTile (forestLeft,29,29 + x,1);
        map.removeTile (26 + x,28,1);
      }
      map.setTile (forestLeft,29,28,1);
      Obstacle treeBottomRight = new Obstacle (new Sprite("/SetPieces/ShortTree/ShortTree3.png"));
      Obstacle treeBottomLeft = new Obstacle (new Sprite("/SetPieces/ShortTree/ShortTree1.png"));
      Obstacle treeTopRight = new Obstacle (new Sprite("/SetPieces/ShortTree/ShortTree2.png"));
      Obstacle treeTopLeft = new Obstacle (new Sprite("/SetPieces/ShortTree/ShortTree0.png"));
      map.setTile (treeBottomRight,20,5,1);
      map.setTile (treeBottomLeft,23,5,1);
      map.setTile (treeTopRight,26,28,1);
      BackTile water = new BackTile (Tile.loadAnim("water"));
      Obstacle cliffLeft = new Obstacle (new Sprite ("Cliff2.png"));
      Obstacle cliffRight = new Obstacle (new Sprite ("Cliff0.png"));
      Obstacle cliffUp = new Obstacle (new Sprite ("Cliff3.png"));
      Obstacle cliffDown = new Obstacle (new Sprite ("Cliff1.png"));
      for (int x = 0; x < map.height(); x++)
      {
        if (x < 13)
        {
          map.setTile (water, 21,x,0);
          map.setTile (cliffLeft, 21,x,1);
          map.setTile (water, 22,x,0);
          map.setTile (cliffRight, 22,x,1);
        }
        if (x < 5)
        {
          map.setTile (cliffUp, 23 + x,13,1);
          map.setTile (cliffDown, 22 + x,14,1);
        }
        if (x < 8)
        {
          map.setTile (water, 21 + x,13,0);
          map.setTile (water, 21 + x,14,0);
        }
        if (x > 14)
        {
          map.setTile (water, 27,x,0);
          map.setTile (cliffLeft, 27,x,1);
          map.setTile (water, 28,x,0);
          map.setTile (cliffRight, 28,x,1);
        }
      }
      map.setTile (cliffLeft, 21,13,1);
      map.setTile (cliffRight, 28,14,1);
      map.setTile (new Obstacle (new Sprite ("cliffCorner1.png")), 21,14,1);
      map.setTile (new Obstacle (new Sprite ("cliffCorner3.png")), 28,13,1);
      map.setTile (new Obstacle (new Sprite ("cliffCornerNub1.png")), 22,13,1);
      map.setTile (new Obstacle (new Sprite ("cliffCornerNub2.png")), 27,14,1);
      SetPiece bridgeHorizontal = new SetPiece ("BridgeHorizontal");
      SetPiece bridgeVertical = new SetPiece ("BridgeVertical");
      map.drawSet (bridgeHorizontal,21,11);
      map.drawSet (bridgeVertical,25,13);
      map.drawSet (new SetPiece ("BigBlue"),24,4);
      map.drawSet (new SetPiece ("BigOrange"),19,14);
      map.drawSet (new SetPiece ("BigGreen"),12,14);
      map.drawSet (new SetPiece ("BigRed"),12,20);
      BackTile pathTleft = new BackTile (new Sprite("groundcornerleft.png"));
      BackTile pathTright = new BackTile (new Sprite("groundcornerright.png"));
      BackTile pathTdown = new BackTile (new Sprite("groundcornerdown.png"));
      BackTile pathTup = new BackTile (new Sprite("groundcornertop.png"));
      BackTile pathBottomRight = new BackTile (new Sprite("groundcorner1.png"));
      BackTile pathBottomLeft = new BackTile (new Sprite("groundcorner0.png"));
      BackTile pathTopLeft = new BackTile (new Sprite("groundcorner2.png"));
      BackTile pathVertical = new BackTile (new Sprite("ground.png"));
      BackTile pathHorizontal = new BackTile (new Sprite("groundhorizontal.png"));
      BackTile pathOpen = new BackTile (new Sprite("groundopen.png"));
      map.setTile(pathTleft,25,11,0);
      for (int x = 11; x < 25; x++)
      {
        if (x == 20 || x == 13)
          map.setTile(pathTup,x,20,0);
        else if (x!= 17)
          map.setTile(pathHorizontal,x,20,0);
        if (x!= 17 && x != 21 && x != 22 && x > 17)
          map.setTile(pathHorizontal,x,11,0);
        if (x < 17)
          map.setTile(pathHorizontal,x,14,0);
        if (x == 13)
          map.setTile(pathTup,x,26,0);
        else if (x!= 17)
          map.setTile(pathHorizontal,x,26,0);
      }
      map.setTile (pathVertical,20,19,0);
      map.setTile (pathVertical,20,18,0);
      map.setTile (pathVertical,25,12,0);
      map.setTile (pathVertical,25,10,0);
      map.setTile (pathVertical,25,9,0);
      map.setTile (pathVertical,25,8,0);
      map.setTile (pathVertical,17,27,0);
      map.setTile (pathVertical,13,25,0);
      map.setTile (pathVertical,13,24,0);
      map.setTile (pathVertical,13,19,0);
      map.setTile (pathVertical,13,18,0);
      for (int x = 11; x < 26; x++)
      {
        if (x == 20 || x == 11)
          map.setTile (pathTleft,25,x,0);
        else if (x != 13 && x != 14)
          map.setTile (pathVertical,25,x,0);
      }
       for (int x = 2; x < 32; x++)
       {
         if (x == 26 || x == 20)
           map.setTile (pathOpen,17,x,0);   
         else if (x == 11)
           map.setTile (pathTright,17,x,0);
         else if (x == 14)
           map.setTile (pathTleft,17,x,0);
         else
           map.setTile (pathVertical,17,x,0);
         if (x <6)
         {
           map.setTile (grass,16,x,0);
           map.setTile (grass,18,x,0);
           map.setTile (forestRight,16,x,1);
           map.setTile (forestLeft,18,x,1);
         } 
         if (x > 27)
         {
           map.setTile (grass,16,x,0);
           map.setTile (grass,18,x,0);
           map.setTile (forestRight,16,x,1);
           map.setTile (forestLeft,18,x,1);
         }
         if (x > 14 && x < 26)
         {
           if (x == 20)
             map.setTile (pathTright,10,x,0);
           else
             map.setTile (pathVertical,10,x,0);
         }
      }
       for (int x = 16; x < 19; x++)
       {
         map.removeTile (x,5,1);
         map.removeTile (x,28,1);
       }
       map.setTile(treeBottomRight,16,5,1);
       map.setTile(treeBottomLeft,18,5,1);
       map.setTile(treeTopRight,16,28,1);
       map.setTile(treeTopLeft,18,28,1);
      map.setTile (pathBottomRight,25,26,1);
      map.setTile (pathBottomLeft,10,26,1);
      map.setTile (pathTopLeft,10,14,1);
      Obstacle fenceTopLeft = new Obstacle (new Sprite("fenceTopLeft.png"));
      Obstacle fenceTopRight = new Obstacle (new Sprite("fenceTopRight.png"));
      Obstacle fenceBottomLeft = new Obstacle (new Sprite("fenceBottomLeft.png"));
      Obstacle fenceBottomRight = new Obstacle (new Sprite("fenceBottomRight.png"));
      Obstacle fenceHorizontal = new Obstacle (new Sprite("fenceHorizontal.png"));
      Obstacle fenceVerticalRight = new Obstacle (new Sprite("fenceVerticalRight.png"));
      Obstacle fenceVerticalLeft = new Obstacle (new Sprite("fenceVerticalLeft.png"));
      Obstacle fenceStopBottom = new Obstacle (new Sprite("fenceEndDown.png"));
      Obstacle fenceStopTop = new Obstacle (new Sprite("fenceEndUp.png"));
      Obstacle fenceStopLeft = new Obstacle (new Sprite("fenceEndLeft.png"));
      Obstacle fenceStopRight = new Obstacle (new Sprite("fenceEndRight.png"));
      map.setTile (fenceTopLeft,18,21,1);
      map.setTile (fenceTopRight,24,21,1);
      map.setTile (fenceBottomLeft,18,25,1);
      map.setTile (fenceBottomRight,24,25,1);
      map.setTile (fenceTopLeft,10,7,1);
      map.setTile (fenceTopRight,16,7,1);
      map.setTile (fenceBottomLeft,10,13,1);
      map.setTile (fenceBottomRight,16,13,1);
      for (int x = 19; x < 24; x++)
      {
        map.setTile(fenceHorizontal,x,25,1);
        if (x >= 20 && x <= 22)
        {
          if (x == 20)
            map.setTile(fenceStopRight,x,21,1);
          else if (x == 22)
            map.setTile(fenceStopLeft,x,21,1);
        }
        else
        map.setTile(fenceHorizontal,x,21,1);
      }
      for (int x = 22; x < 25; x++)
      {
        map.setTile(fenceVerticalLeft,18,x,1);
        map.setTile(fenceVerticalRight,24,x,1);
      }
      for (int x = 8; x < 13; x++)
      {
        map.setTile(fenceVerticalLeft,10,x,1);
        if (x >= 10 && x <= 12)
        {
          if (x == 10)
            map.setTile(fenceStopBottom, 16,x,1);
          else if (x == 12)
            map.setTile(fenceStopTop, 16,x,1);
        }
        else
        map.setTile(fenceVerticalRight,16,x,1);
      }
      for (int x = 11; x < 16; x++)
      {
        map.setTile(fenceHorizontal,x,7,1);
        if (x >= 12 && x <= 14)
        {
          if (x == 12)
            map.setTile(fenceStopRight,x,13,1);
          else if (x == 14)
            map.setTile(fenceStopLeft,x,13,1);
        }
        else
        map.setTile(fenceHorizontal,x,13,1);
      }
      
      openWorld.setPlayer (new Player ("Red","me",10,10,Deck.deckFromFile("/Save/PlayerDeck.txt")));
      openWorld.setMap(map,17,27);
    }
    catch (IOException e)
    {
      e.printStackTrace();
      System.out.println(e.getMessage());
    }